version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./skillchain-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://backend:3001/api
    networks:
      - skillchain-network
    restart: unless-stopped

  # Backend service
  backend:
    build:
      context: ./skillchain-backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=skillchain
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    networks:
      - skillchain-network
    restart: unless-stopped

  # Database service
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=skillchain
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./skillchain-backend/src/db/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./skillchain-backend/src/db/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
    networks:
      - skillchain-network
    restart: unless-stopped

networks:
  skillchain-network:
    driver: bridge

volumes:
  postgres-data:
